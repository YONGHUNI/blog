[
  {
    "objectID": "about/me/index.html",
    "href": "about/me/index.html",
    "title": "Yonghun Suh",
    "section": "",
    "text": "ORCID\n  \n  \n    \n     Github\n  \n\n  \n  \n\n\nI am a system administrator of two GPU clusters in the Office of Information & Computing Center, at College of Engineering, Seoul National University (SNU). I finished my master’s in Geography at SNU in Feb. 2024, advised by Dr. Gunhak Lee.\nI am interested in leveraging high performance computing within the domain of Geography, GIScience, machine learning, and remote sensing. My thesis of master degree involves real-time monitoring of landslide susceptibility using high-resolution active remote sensing data.\nI completed my undergraduate studies at Kongju National University, earning a B.A. in Geography and a B.Sc. in Atmospheric Science. Throughout my academic journey, I’ve published several research papers and presented at various conferences, exploring topics like landslide prediction, population density estimation, and the impact of air pollution.\nIn addition to my research, I’m involved in a community-based air quality project at the State University of New York at Buffalo(UB Clean Air) and manage GPU clusters for the College of Engineering at SNU. I’m skilled in programming with R, Python, and Julia, and I have extensive experience with GIS and remote sensing software."
  },
  {
    "objectID": "about/me/index.html#seoul-national-university",
    "href": "about/me/index.html#seoul-national-university",
    "title": "Yonghun Suh",
    "section": "Seoul National University",
    "text": "Seoul National University\n\nSeoul, South Korea | Sept 2021 – Feb 2024\n\nM.A. in Geography"
  },
  {
    "objectID": "about/me/index.html#kongju-national-university",
    "href": "about/me/index.html#kongju-national-university",
    "title": "Yonghun Suh",
    "section": "Kongju National University",
    "text": "Kongju National University\n\nSouth Chungcheong Province, South Korea | Mar 2015 – Aug 2021\n\nB.A. in Geography\nB.Sc. in Atmospheric Science"
  },
  {
    "objectID": "about/me/index.html#predicting-landslide-susceptibility-using-high-resolution-active-remote-sensing-data-an-interpretable-machine-learning-approach",
    "href": "about/me/index.html#predicting-landslide-susceptibility-using-high-resolution-active-remote-sensing-data-an-interpretable-machine-learning-approach",
    "title": "Yonghun Suh",
    "section": "Predicting Landslide Susceptibility Using High-resolution Active Remote Sensing Data: An Interpretable Machine Learning Approach",
    "text": "Predicting Landslide Susceptibility Using High-resolution Active Remote Sensing Data: An Interpretable Machine Learning Approach\n\n\n\n\n\n\n\n\nThis study presents a machine learning model to predict landslide susceptibility using Interferometric SAR displacement data and Hybrid Surface Rainfall estimates, emphasizing the role of active remote sensing.\nThe findings highlight the potential of using remote sensing data for landslide susceptibility assessment, offering valuable insights for disaster preparedness and mitigation strategies.\nPublished in Journal of the Korean Cartographic Association with Dr. Gunhak Lee."
  },
  {
    "objectID": "about/me/index.html#delayed-effects-of-air-pollution-on-public-bike-sharing-system-use-in-seoul-south-korea-a-time-series-analysis",
    "href": "about/me/index.html#delayed-effects-of-air-pollution-on-public-bike-sharing-system-use-in-seoul-south-korea-a-time-series-analysis",
    "title": "Yonghun Suh",
    "section": "Delayed effects of air pollution on public bike-sharing system use in Seoul, South Korea: A time series analysis",
    "text": "Delayed effects of air pollution on public bike-sharing system use in Seoul, South Korea: A time series analysis\n\n\n\n\n\n\n\n\nThis study examines the short-term impact of ambient air pollution on public bike-sharing system (PBS) usage in Seoul from 2018 to 2021, finding a consistent negative association between elevated levels of air pollutants (PM2.5, PM10, NO2, and O3) and bike usage the following day.\nThe analysis reveals that high pollution days are linked to a reduction in cycling behavior, with no variations based on age, COVID-19, or seasonality.\nPublished in Social Science & Medicine with Dr. Eun-Hye Yoo and Dr. John E. Roberts."
  },
  {
    "objectID": "about/me/index.html#estimation-of-the-de-facto-population-at-the-building-scale-using-a-dasymetric-mapping-method-based-on-gwr",
    "href": "about/me/index.html#estimation-of-the-de-facto-population-at-the-building-scale-using-a-dasymetric-mapping-method-based-on-gwr",
    "title": "Yonghun Suh",
    "section": "Estimation of the de Facto Population at the Building Scale Using a Dasymetric Mapping Method Based on GWR",
    "text": "Estimation of the de Facto Population at the Building Scale Using a Dasymetric Mapping Method Based on GWR\n\n\n\n\n\n\n\n\nThis study proposes a method using geographically weighted regression(GWR) and dasymetric mapping to estimate fine-scale population in buildings, addressing the challenges of COVID-19 transmission in urban areas.\nBy utilizing building usage and floor area as auxiliary data, it provides detailed population distribution estimates for Seoul, which can inform effective pandemic response strategies.\nPublished in Journal of the Korean Cartographic Association with Dr. Gunhak Lee."
  },
  {
    "objectID": "about/me/index.html#accessibility-analysis-of-public-cooling-shelters-in-seoul-considering-local-temperature-focusing-on-the-elderly-population",
    "href": "about/me/index.html#accessibility-analysis-of-public-cooling-shelters-in-seoul-considering-local-temperature-focusing-on-the-elderly-population",
    "title": "Yonghun Suh",
    "section": "Accessibility Analysis of Public Cooling Shelters in Seoul Considering Local Temperature: Focusing on the Elderly Population",
    "text": "Accessibility Analysis of Public Cooling Shelters in Seoul Considering Local Temperature: Focusing on the Elderly Population\n\n\n\n\n\n\n\n\nThis study aimed to identify vulnerable areas and inform heatwave policy decisions.\nIt examined vulnerability using local Bi-var Moran’s I, analyzing the spatial accessibility of heatwave shelters for the elderly and temperature variations in Seoul.\nThe findings were presented at the 2022 Annual Conference of the Korean Geographical Society."
  },
  {
    "objectID": "posts/pyenvsetting/index.html",
    "href": "posts/pyenvsetting/index.html",
    "title": "Python Dependency Test",
    "section": "",
    "text": "This example demonstrates how Quarto documents can be rendered in GitHub-Actions CI/CD environment with the required Python/R package dependencies. This need pre-setup - see: my .github/workflows and GitHub Actions for more details.\nThe code below is part of what I used for my Master’s thesis. In my thesis, I used the binary data provided from Korea Meteorological Agency(KMA) which contains radar reflectance of precipitation. Using the code below, I derived the rainfall intensity and the amount of antecedent rainfall and plugged them into my machine learning models."
  },
  {
    "objectID": "posts/pyenvsetting/index.html#import-some-packages",
    "href": "posts/pyenvsetting/index.html#import-some-packages",
    "title": "Python Dependency Test",
    "section": "\n3.1 Import Some Packages",
    "text": "3.1 Import Some Packages\n\nCodeimport sys\nprint(sys.executable)\n\nC:\\Users\\dydgn\\ANACON~1\\envs\\baseline\\python.exe\n\n\nThis will show where the python executable binary is.\n\nCodeimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport struct\nimport gzip\n\n\nImporting basic packages"
  },
  {
    "objectID": "posts/pyenvsetting/index.html#handling-various-file-formats",
    "href": "posts/pyenvsetting/index.html#handling-various-file-formats",
    "title": "Python Dependency Test",
    "section": "\n3.2 Handling Various File Formats",
    "text": "3.2 Handling Various File Formats\n\n3.2.1 Get the Size of a Compressed Gunzip, i.e., Raw File\n\nCodefile = \"./data/RDR_HSR_22_20220808/RDR_CMP_HSR_PUB_202208082200.bin.gz\"\n\n\n\n# # Get the size of the binary data file in bytes\nfile_size = os.path.getsize(file)\n\nprint(\"The compressed data file size is {} bytes.\".format(file_size))\n\nThe compressed data file size is 608837 bytes.\n\n\n\n3.2.2 Get the Size of a Binary file\n\nCodedef getuncompressedsize(filename):\n    with open(filename, 'rb') as f:\n        f.seek(-4, 2)\n        return struct.unpack('I', f.read(4))[0]\n\nfile_size = getuncompressedsize(file)\n\nprint(\"The binary data file size is {} bytes.\".format(file_size))\n\nThe binary data file size is 13282434 bytes."
  },
  {
    "objectID": "posts/pyenvsetting/index.html#hmm..-do-you-know-how-to-cook-a-binary-file",
    "href": "posts/pyenvsetting/index.html#hmm..-do-you-know-how-to-cook-a-binary-file",
    "title": "Python Dependency Test",
    "section": "\n3.3 Hmm.. Do you know how to cook a binary file?",
    "text": "3.3 Hmm.. Do you know how to cook a binary file?\nI had to read the manual provided to convert a binary file into so-called raster\n\n\n\n\n\n\n\n\n\n3.3.1 Read a binary as a numpy array\n\nCodeheader_size = 1024\n\n\n# Check if the file size is non-zero\nif file_size == 0:\n    print(\"The binary data file is empty.\")\nelse:\n  f = gzip.GzipFile(file)\n  f.seek(header_size)\n  file_content = f.read()\n  data = np.frombuffer(file_content, dtype=np.short)\n  f.close()\n\n1024\n\n\n\n3.3.2 Reshape the array using the number from the official manual\n\nCode# Reshape the data into a 2D array\ndata = data.reshape(2881, 2305)\n# data needs to be flipped!\ndata = np.flipud(data)\n\ndata.shape\n\n(2881, 2305)\n\n\n\n3.3.3 Initial plotting\n\nCode#### Plotting\n\ndef matplot(x):\n  \n  plt.clf()\n  plt.imshow(x)\n  plt.colorbar()\n  plt.show()\n\n\nmatplot(data)\n\n\n\n\n\n\n\n\n3.3.4 Munging data\nTo use as a feature of the model, I had to change the radar reflectance into the amount of rainfall intensity by using Z-R relationship.\n\nCode\n# Scale factor\n\n#define PUB_OUT   -30000 // Outside of the observed region\n\n#define PUB_IN    -25000 // Unobserved areas within the observed region\n\n#define PUB_MIN   -20000 // Minimum value for representation within the observed area\n\n\ndata = np.where(data&lt;-20000, 0, data)\n\necho = data*0.01\n\n\n\n\n# Z-R Relation\n\nZRa = 148.\n\nZRb = 1.59\n\n# converting dBZ to rain\n\ndef dbz2rain(x):\n\n    rain = (x*0.1 - np.log10(ZRa))/ZRb\n\n    rain = 10**rain\n\n    return rain\n\n\nR = dbz2rain(echo)\n\nR[R&lt;=0.04315743] = 0.0\n\n\nAfter the conversion, then we get the actual amount of rainfall intensity in mm/hr.\n\nCode# Unit: millimeter per hour\n\nmatplot(R)"
  },
  {
    "objectID": "posts/pyenvsetting/index.html#plot-using-rasterplot",
    "href": "posts/pyenvsetting/index.html#plot-using-rasterplot",
    "title": "Python Dependency Test",
    "section": "\n4.1 Plot using raster::plot()",
    "text": "4.1 Plot using raster::plot()\n\nCode#handy R-python interface: reticulate\n\npcp &lt;- py$R\n\nlibrary(raster)\n\nLoading required package: sp\n\nCodetest &lt;- raster(pcp,\n       xmn=(-1121*500),\n       xmx=((2305-1121)*500),\n       ymn=(-1681*500),\n       ymx=(2881-1681)*500,\n       crs = CRS(\"+proj=lcc +lat_1=30 +lat_2=60 +lat_0=38 +lon_0=126 +a=6378138.00 +b=6356752.314 +units=m +no_defs\")\n       )\n\n\nplot(test)"
  },
  {
    "objectID": "posts/pyenvsetting/index.html#plot-using-tmap-package",
    "href": "posts/pyenvsetting/index.html#plot-using-tmap-package",
    "title": "Python Dependency Test",
    "section": "\n4.2 Plot using tmap package",
    "text": "4.2 Plot using tmap package\n\nCodelibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\nCodelibrary(leafem)\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nCodetest[test==0]=NA\n\n{\n  tm_basemap(c(\"OpenStreetMap.HOT\",\n               \"https://mt1.google.com/vt/lyrs=y&hl=en&z={z}&x={x}&y={y}\",\n               \"https://mt1.google.com/vt/lyrs=s&hl=en&z={z}&x={x}&y={y}\"),\n             group = list(c(\"OpenStreetMap.HOT\",\n                       \"Google Satellite Imagery w/ label\",\n                       \"Google Satellite Imagery wo/ label\"))) +\n    tm_shape(test)  +                                  \n    tm_raster(title = \"Max Rainfall Intensity[mm/hr]\",\n              palette = \"-Spectral\",\n              style = \"cont\") -&gt; themap\n  \n  \n  \n  tmap_leaflet(themap)|&gt;\n    addMouseCoordinates()\n  \n}\n\nstars object downsampled to 895 by 1118 cells. See tm_shape manual (argument raster.downsample)\n\n\n\n\n\n\n\n4.2.1 Extra: Compairing with the plot from Korea Meteorological Agency"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to Yonghuni’s Cyber Home",
    "section": "",
    "text": "Python Dependency Test\n\n\nTest Case of Handling a Binary Data with Python\n\n\n\nCode\n\n\n\n\n\n\n\n\n\nOct 9, 2024\n\n\nYonghun Suh\n\n\n\n\n\n\n\n\n\n\n\n\nR Dependency Test\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\n\n\nOct 7, 2024\n\n\nYonghun Suh\n\n\n\n\n\n\n\n\n\n\n\n\nMore Coming… Stay Tuned!\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nOct 7, 2024\n\n\nYonghun Suh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/envsetting/index.html",
    "href": "posts/envsetting/index.html",
    "title": "R Dependency Test",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\n\n\n\nSee: https://github.com/quarto-dev/quarto-actions/blob/main/examples/example-03-dependencies.md\n\n\n\n\nlibrary(yaml)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(sf)\nlibrary(terra)\nlibrary(tmap)\nlibrary(leafem)\n\n\nTidyverse\n\nread_csv(\"./data/SVI_2000_US.csv\")\n\nRows: 65081 Columns: 82\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (9): STATE_FIPS, CNTY_FIPS, STCOFIPS, TRACT, FIPS, STATE_NAME, STATE_AB...\ndbl (73): G1V1R, G1V2R, G1V3R, G1V4R, G2V1R, G2V2R, G2V3R, G2V4R, G3V1R, G3V...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 65,081 × 82\n   STATE_FIPS CNTY_FIPS STCOFIPS TRACT FIPS  STATE_NAME STATE_ABBR COUNTY  G1V1R\n   &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;   &lt;dbl&gt;\n 1 01         001       01001    0201… 0100… Alabama    AL         Autau… 0.127 \n 2 01         001       01001    0202… 0100… Alabama    AL         Autau… 0.227 \n 3 01         001       01001    0203… 0100… Alabama    AL         Autau… 0.0766\n 4 01         001       01001    0204… 0100… Alabama    AL         Autau… 0.0454\n 5 01         001       01001    0205… 0100… Alabama    AL         Autau… 0.0367\n 6 01         001       01001    0206… 0100… Alabama    AL         Autau… 0.152 \n 7 01         001       01001    0207… 0100… Alabama    AL         Autau… 0.11  \n 8 01         001       01001    0208… 0100… Alabama    AL         Autau… 0.0844\n 9 01         001       01001    0209… 0100… Alabama    AL         Autau… 0.138 \n10 01         001       01001    0210… 0100… Alabama    AL         Autau… 0.176 \n# ℹ 65,071 more rows\n# ℹ 73 more variables: G1V2R &lt;dbl&gt;, G1V3R &lt;dbl&gt;, G1V4R &lt;dbl&gt;, G2V1R &lt;dbl&gt;,\n#   G2V2R &lt;dbl&gt;, G2V3R &lt;dbl&gt;, G2V4R &lt;dbl&gt;, G3V1R &lt;dbl&gt;, G3V2R &lt;dbl&gt;,\n#   G4V1R &lt;dbl&gt;, G4V2R &lt;dbl&gt;, G4V3R &lt;dbl&gt;, G4V4R &lt;dbl&gt;, G4V5R &lt;dbl&gt;,\n#   USG1V1P &lt;dbl&gt;, USG1V2P &lt;dbl&gt;, USG1V3P &lt;dbl&gt;, USG1V4P &lt;dbl&gt;, USG1TP &lt;dbl&gt;,\n#   USG2V1P &lt;dbl&gt;, USG2V2P &lt;dbl&gt;, USG2V3P &lt;dbl&gt;, USG2V4P &lt;dbl&gt;, USG2TP &lt;dbl&gt;,\n#   USG3V1P &lt;dbl&gt;, USG3V2P &lt;dbl&gt;, USG3TP &lt;dbl&gt;, USG4V1P &lt;dbl&gt;, USG4V2P &lt;dbl&gt;, …\n\n\n\n\ndata.table\n\nfread(\"./data/SVI_2000_US.csv\") |&gt; head()\n\n   STATE_FIPS CNTY_FIPS STCOFIPS TRACT       FIPS STATE_NAME STATE_ABBR  COUNTY\n        &lt;int&gt;     &lt;int&gt;    &lt;int&gt; &lt;int&gt;      &lt;i64&gt;     &lt;char&gt;     &lt;char&gt;  &lt;char&gt;\n1:          1         1     1001 20100 1001020100    Alabama         AL Autauga\n2:          1         1     1001 20200 1001020200    Alabama         AL Autauga\n3:          1         1     1001 20300 1001020300    Alabama         AL Autauga\n4:          1         1     1001 20400 1001020400    Alabama         AL Autauga\n5:          1         1     1001 20500 1001020500    Alabama         AL Autauga\n6:          1         1     1001 20600 1001020600    Alabama         AL Autauga\n    G1V1R  G1V2R G1V3R  G1V4R  G2V1R  G2V2R  G2V3R  G2V4R  G3V1R  G3V2R  G4V1R\n    &lt;num&gt;  &lt;num&gt; &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;\n1: 0.1268 0.0527 17771 0.1841 0.0782 0.2783 0.2032 0.1018 0.0447 0.0000 0.0000\n2: 0.2270 0.0997 14217 0.3249 0.1215 0.2735 0.3466 0.1176 0.6691 0.0045 0.0092\n3: 0.0766 0.0288 18346 0.1699 0.1338 0.2890 0.1902 0.1130 0.1794 0.0056 0.0317\n4: 0.0454 0.0351 19741 0.1341 0.1510 0.2500 0.1842 0.0560 0.0621 0.0000 0.0310\n5: 0.0367 0.0166 24510 0.0863 0.0682 0.3079 0.1193 0.0654 0.1121 0.0059 0.0246\n6: 0.1521 0.0550 16395 0.2386 0.0938 0.3034 0.2214 0.1101 0.2078 0.0185 0.0000\n    G4V2R  G4V3R  G4V4R  G4V5R USG1V1P USG1V2P USG1V3P USG1V4P USG1TP USG2V1P\n    &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;   &lt;num&gt;\n1: 0.2075 0.0090 0.0409 0.0389   0.604   0.541   0.566   0.518  0.591   0.214\n2: 0.0198 0.0544 0.0705 0.0140   0.829   0.837   0.790   0.814  0.904   0.495\n3: 0.0143 0.0141 0.0582 0.0270   0.390   0.211   0.533   0.473  0.367   0.580\n4: 0.0492 0.0181 0.0301 0.0040   0.209   0.306   0.452   0.355  0.264   0.687\n5: 0.0070 0.0182 0.0241 0.0000   0.153   0.061   0.258   0.194  0.067   0.162\n6: 0.3373 0.0182 0.0571 0.0000   0.682   0.566   0.658   0.659  0.706   0.306\n   USG2V2P USG2V3P USG2V4P USG2TP USG3V1P USG3V2P USG3TP USG4V1P USG4V2P\n     &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;   &lt;num&gt;   &lt;num&gt;\n1:   0.675   0.547   0.754  0.609   0.169   0.000  0.000   0.000   0.872\n2:   0.641   0.971   0.850  0.935   0.828   0.061  0.375   0.332   0.592\n3:   0.739   0.473   0.820  0.818   0.488   0.072  0.142   0.477   0.571\n4:   0.456   0.439   0.315  0.440   0.233   0.000  0.002   0.474   0.662\n5:   0.829   0.119   0.421  0.236   0.370   0.081  0.078   0.441   0.512\n6:   0.811   0.644   0.811  0.802   0.527   0.289  0.344   0.000   0.954\n   USG4V3P USG4V4P USG4V5P USG4TP  USTP USG1V1F USG1V2F USG1V3F USG1V4F USG1TF\n     &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt; &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;\n1:   0.048   0.316   0.945  0.574 0.450       0       0       0       0      0\n2:   0.421   0.532   0.846  0.782 0.854       0       0       0       0      0\n3:   0.070   0.454   0.879  0.682 0.522       0       0       0       0      0\n4:   0.107   0.215   0.000  0.280 0.183       0       0       0       0      0\n5:   0.109   0.159   0.000  0.206 0.078       0       0       0       0      0\n6:   0.109   0.446   0.000  0.302 0.557       0       0       0       0      0\n   USG2V1F USG2V2F USG2V3F USG2V4F USG2TF USG3V1F USG3V2F USG3TF USG4V1F\n     &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;   &lt;num&gt;\n1:       0       0       0       0      0       0       0      0       0\n2:       0       0       1       0      1       0       0      0       0\n3:       0       0       0       0      0       0       0      0       0\n4:       0       0       0       0      0       0       0      0       0\n5:       0       0       0       0      0       0       0      0       0\n6:       0       0       0       0      0       0       0      0       0\n   USG4V2F USG4V3F USG4V4F USG4V5F USG4TF  USTF Totpop2000 Totalhu G1V1N G1V2N\n     &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt; &lt;num&gt;      &lt;num&gt;   &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:       0       0       0       1      1     1       1879     742   227    46\n2:       0       0       0       0      0     1       1934     758   433    80\n3:       0       0       0       0      0     0       3339    1263   250    42\n4:       0       0       0       0      0     0       4556    1871   207    77\n5:       0       0       0       0      0     0       6040    2277   222    49\n6:       1       0       0       0      1     1       3378    1352   514    90\n   G1V4N G2V1N G2V2N G2V3N G2V4N G3V1N G3V2N G4V1N G4V2N G4V3N G4V4N G4V5N\n   &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;\n1:   226   147   523   339    73    84     0     0   154     6    27    73\n2:   376   235   529   603    74  1294     8     7    15    37    48    27\n3:   362   447   965   549   136   599    17    40    18    17    70    90\n4:   412   688  1139   777    98   283     0    58    92    32    53    18\n5:   326   412  1860   644   143   677    33    56    16    40    53     0\n6:   487   317  1025   689   132   702    58     0   456    22    69     0\n                                     Shape Shape.STArea() Shape.STLength()\n                                    &lt;char&gt;          &lt;num&gt;            &lt;num&gt;\n1: (-86.49001754505039, 32.47712149572407)   0.0009407913       0.15003547\n2: (-86.47336703419953, 32.47430466837865)   0.0003177997       0.09226531\n3:  (-86.4602033958281, 32.47548170589444)   0.0005147620       0.10013704\n4: (-86.44371817489963, 32.47198623491002)   0.0006099415       0.11676753\n5: (-86.42267086235849, 32.45886190833748)   0.0011041460       0.16854121\n6: (-86.47834504936274, 32.44206725458296)   0.0007950631       0.16149683\n\n\n\n\nSimple Features\n\nread_sf(\"./data/test.gpkg\") |&gt; st_geometry() |&gt; plot()\n\n\n\n\n\n\n\n\n\n\nTerra\n\nvect(\"./data/test.gpkg\") |&gt; plot()\n\n\n\n\n\n\n\n\n\n\nThemetic Map(tmap) & leafem\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\npark_list &lt;- read_sf(\"./data/test.gpkg\") %&gt;% \n    filter(grepl(\"서울\",소재지지번주소)) %&gt;%\n    select(공원명,소재지지번주소)\n\n{\n  tm_basemap(c(\"OpenStreetMap.HOT\",\n               \"https://mt1.google.com/vt/lyrs=y&hl=en&z={z}&x={x}&y={y}\",\n               \"https://mt1.google.com/vt/lyrs=s&hl=en&z={z}&x={x}&y={y}\"),\n             group = list(c(\"OpenStreetMap.HOT\",\n                       \"Google Satellite Imagery w/ label\",\n                       \"Google Satellite Imagery wo/ label\"))) +\n    tm_shape(park_list)  +                                  \n    tm_dots(size=.1,\n            col = \"red\", \n            border.col=\"white\",\n            border.lwd=3,\n            id=\"name\") -&gt; themap\n  \n  \n  \n  tmap_leaflet(themap)|&gt;\n    addMouseCoordinates()\n  \n}"
  },
  {
    "objectID": "posts/update/index.html",
    "href": "posts/update/index.html",
    "title": "More Coming… Stay Tuned!",
    "section": "",
    "text": "More update will soon be followed! Stay tuned!"
  },
  {
    "objectID": "about/blog/index.html",
    "href": "about/blog/index.html",
    "title": "About My Blog",
    "section": "",
    "text": "Source code for this blog\n  \n  \n      Creating a website with quarto\n  \n  \n      Quarto official website"
  }
]