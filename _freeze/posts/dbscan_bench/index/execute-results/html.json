{
  "hash": "88ea6dcbd6d0c25bf5ba7e11eb6871db",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to boost a DBSCAN task\"\nsubtitle: \"Utilizing High Performance Library from Python\"\nauthor: \"Yonghun Suh\"\ndate: \"Sep. 9, 2025\"\ncategories: [Code]\nimage: https://raw.githubusercontent.com/wangyiqiu/dbscan-python/0.0.12-dev/compare.png\nformat: \n  html:\n    toc: true\n    number_sections: true\n    code-copy: true\n    code-fold: show\n    code-tools: true\n    code-overflow: scroll\n    code-link: true\n    number-sections: true\n    toc_depth: 3\n    lightbox: true\n#execute:\n#  freeze: true\n#comments: false\n---\n\n# Backdrop\n\n![Chat](data/background.jpg){width=70%}\n\n\n\n\n>[Frodo, 2:37 PM] I'm working on finding representative points for census tracts using nationwide residential building data, weighted by the population of each tract.<br>\n[Frodo, 2:38 PM] But DBSCAN is taking forever lol, so I'm running it in parallel.<br>\n[Frodo, 2:38 PM] Using something like the future package in R.<br>\n[Yong-Hun Suh, 2:41 PM] Yeah, DBSCAN’s time complexity isn’t great…<br>\n[Yong-Hun Suh, 4:47 PM] Are you still working on that (DBSCAN)?<br>\n[Yong-Hun Suh, 4:47 PM] If it’s a project you’re going to continue, I can give you a tip…<br>\n[Frodo, 4:53 PM] Just fixed the code and running it now haha, results should come out in a **few days** if it’s fast.<br>\n\n\n\nI was chatting with my colleague from grad school who said DBSCAN was running too slowly on their project.\n\n\nHe had already been using a high speed C++ implementation of DBSCAN in R. Still, however, it was giving an eternal waiting.\n\n\n\nI thought, 'Why not help him out and turn this into a blog article?'\n\n\n## **Analyzing complexity factors**\n\n\n\n::: {.callout-tip}\n\n## What is Time Complexity?\n\nIn theoretical computer science, the time complexity is the computational complexity that describes the amount of computer time it takes to run an algorithm. In the plot below, $n$ represents the size of the input, and $N$ represents the number of operations the algorithm performs. This relationship is a critical factor in defining the algorithm's performance, as the efficiency of the algorithm can be assessed by how $N$ changes as the input size $n$ increases.\n\n[Learn more](https://en.wikipedia.org/wiki/Time_complexity){target=\"_blank\"}\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(ggplot2)\n\n# Seq `n` gen\nn <- seq(0, 100, by = 0.01)  # need to make the increment small in order to avoid `Inf`s\n\n# data.table\ndf <- data.table(\n                  n = n,\n                  `O(1)` = 1,\n                  `O(log n)` = log2(n),\n                  `O(n)` = n,\n                  `O(n log n)` = n * log2(n),\n                  `O(n^2)` = n^2,\n                  `O(2^n)` = 2^n,\n                  `O(n!)` = factorial(n)\n                )\n\ndf_long <- data.table::melt(df, id.vars = \"n\", variable.name = \"Complexity\", value.name = \"Time\")\n\nggplot(df_long, aes(x = n, y = Time, color = Complexity)) +\n      geom_line(size = 1.2) +\n            ylim(1, 100) +\n            xlim(1, 100)+\n      labs(\n            #title = \"Compirison of Computational Complexity\",\n            x = \"Input Size (n)\",\n            y = \"Number of Operations (N)\",\n            color = \"Complexity\"\n          ) +\n      theme_minimal() +\n      theme(\n            plot.title = element_text(size = 16, face = \"bold\"),\n            legend.title = element_text(size = 12),\n            legend.text = element_text(size = 10)\n      )\n```\n\n::: {.cell-output-display}\n![It is good to know if the algorithm can handle my problem well!](index_files/figure-html/unnamed-chunk-1-1.png){fig-alt='A line plot of Computational Complexity' width=672}\n:::\n\nCompirison of Computational Complexity\n:::\n\n\n\n\n## DBSCAN time complexity\n\nDBSCAN’s runtime is dominated by how you perform neighborhood (range) queries. The classic “it’s $O(n²)$” is only the worst case of a spectrum that depends on data distribution, dimensionality, the index used, and the radius parameter $\\varepsilon$.\n\n---\n\n### Core steps and cost drivers\n\n- **Range queries:** For each point, find all neighbors within radius $\\varepsilon$. Distance evaluation for one pair costs $O(d)$ in $d$-dimensional Euclidean space.\n- **Cluster expansion:** A queue-based flood-fill that repeatedly issues range queries starting from core points (points with at least $\\text{minPts}$ neighbors within $\\varepsilon$).\n\nAsymptotically, the number and cost of range queries dominate; the expansion logic is linear in the number of discovered neighbors but tied to the same range-query results.\n\n---\n\n### Complexity by neighborhood search strategy\n\n#### Brute-force (no index)\n- Per range query: compute distance to all points ⇒ $O(n \\cdot d)$.\n- One query per point in the simplest implementation ⇒ $O(n^2 \\cdot d)$.\n- Cluster expansion may reuse queries or cause repeats; asymptotically the bound remains $\\Theta(n^2 \\cdot d)$ in the worst case.\n\n#### Space-partitioning trees (kd-tree, ball tree, R-tree-like)\n- Index build: typically $O(n \\log n)$ time, $O(n)$ space.\n- Range query cost:\n  - Best/average (well-behaved low–moderate $d$, balanced tree, moderate $\\varepsilon$): $O(\\log n + k)$, where $k$ is the number of reported neighbors.\n  - Worst case (high $d$, large $\\varepsilon$, or adversarial data): degenerates to $O(n)$.\n- Overall:\n  - Best/average: $O(n \\log n + \\sum \\limits_{i=1}^{n} (\\log n + k_i)) = O(n \\log n + K)$, where $K = \\sum k_i$ is total neighbor reports. If density per query is bounded, $K = O(n)$, giving $O(n \\log n)$ plus distance cost factor $O(d)$.\n  - Worst: $O(n^2 \\cdot d)$.\n\n#### Uniform grid (fixed-radius hashing) in low dimensions\n- Build grid hashing once: expected $O(n)$.\n- Range query: constant number of adjacent cells, expected $O(1 + k)$ in 2D/3D if $\\varepsilon$ is aligned with cell size and data are not pathologically skewed.\n- Overall in practice: near-linear $O(n + K)$, again with distance cost $O(d)$, but this approach becomes brittle as $d$ grows.\n\n> In all cases, include the distance computation factor $O(d)$. For high dimensions, tree and grid pruning effectiveness collapses, pushing complexity toward $\\Theta(n^2 \\cdot d)$.\n\n---\n\n## What influences the runtime\n\n- **Dimensionality $d$:** Distance costs scale with $O(d)$, and index pruning degrades with the curse of dimensionality, often turning tree queries into $O(n)$.\n- **Neighborhood radius $\\varepsilon$:** Larger $\\varepsilon$ increases average neighbor count $k$, raises $K=\\sum k_i$, and triggers more expansions; in the limit, most points neighbor each other ⇒ near $O(n^2 \\cdot d)$.\n- **Data distribution and density:** Well-separated, roughly uniform, low-density data favor subquadratic performance with indexes. Dense clusters or large connected components increase expansions and repeats.\n- **minPts:** Affects how many points become core (thus how much expansion occurs). It changes constants and practical behavior but not the worst-case big-O bound.\n- **Distance metric:** Non-Euclidean metrics can alter pruning efficacy and per-distance cost.\n- **Implementation details:** Caching of range queries, deduplication, and “expand only once per point” optimizations materially reduce constants.\n\n---\n\n## Practical scenarios\n\n| Scenario | Assumptions | Typical complexity |\n|---|---|---|\n| Brute-force baseline | Any $d$, no index | $\\Theta(n^2 \\cdot d)$ |\n| Tree index, low–moderate $d$ | Balanced tree, moderate $\\varepsilon$, bounded neighbor counts | $O(n \\log n \\cdot d)$ |\n| Tree index, high $d$ or large $\\varepsilon$ | Poor pruning, dense neighborhoods | $\\Theta(n^2 \\cdot d)$ |\n| Grid index (2D/3D) | Well-chosen cell size, non-pathological data | Near $O(n \\cdot d)$ |\n| Approximate NN/range | ANN structure (e.g., HNSW), approximate neighbors | Subquadratic wall-time; formal bounds vary |\n\n\n::: {.callout-note}\n- The index build cost $O(n \\log n)$ (trees) or $O(n)$ (grid) is typically amortized across all range queries.\n- If each point’s neighbor count $k_i$ is bounded by a small constant on average, and pruning works, the total neighbor reports $K$ is $O(n)$, leading to near $O(n \\log n)$ behavior with trees.\n:::\n\n\n\n\n\n> But... What if you neither can reduce your dataset... nor change the parameter of the DBSCAN?\n\n\n\n## Solution...? At least for this case :)\n\n**Use more efficient algorithms that fully leverage your hardware's full potential!**\n\n\nFor this case, I used `dbscan-python`, which is a high-performance parallel implementation of DBSCAN, based on the SIGMOD 2020 paper “[Theoretically Efficient and Practical Parallel DBSCAN](https://github.com/wangyiqiu/dbscan-python){target=\"_blank\"}.”\n\n\n\nThis work achieves theoretically-efficient clustering by minimizing total work and maintaining polylogarithmic parallel depth, enabling scalable performance on large datasets. \n\nCompared to the naive $O(n^2)$ approach, the proposed algorithm reduces time complexity to $O(n \\log n)$ work and $O(\\log n)$ depth in 2D, and sub-quadratic work in higher dimensions through grid-based partitioning, parallel union-find, and spatial indexing techniques.\n\n\n\nAs the name of the package implies, I need to use Python again for this experiment.\n\n\n# Experiments\n\n## Setups\n\n### Used R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dbscan)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dbscan'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:stats':\n\n    as.dendrogram\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'arrow'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(future.apply)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: future\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n\n### Python Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n\n\n\nif (Sys.info()[[1]]==\"Windows\") {\n        \n    # For my Windows Environment\n    use_condaenv(\"C:/Users/dydgn/miniforge3/envs/dbscan/python.exe\")\n    \n    } else{\n    \n    system(\"micromamba install -n baseline -c conda-forge dbscan -y\")\n\n    # For github actions to utilize CI/CD\n\n    use_condaenv(\"/home/runner/micromamba/envs/baseline/bin/python\", required = TRUE)   \n\n    \n}\n\n\n\nsys <- import(\"sys\")\n\nsys$executable\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/home/runner/micromamba/envs/baseline/bin/python\"\n```\n\n\n:::\n:::\n\n\n\n\n## Generated Lab Dataset\n\nFirst, I had to replicate a famous dataset for demonstrating DBSCAN.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_random_semicircle <- function(center_x, center_y, radius, start_angle, end_angle, n_points = 100, noise = 0.08) {\n    \n      angles <- runif(n_points, min = start_angle, max = end_angle)\n      x <- center_x + radius * cos(angles) + rnorm(n_points, 0, noise)\n      y <- center_y + radius * sin(angles) + rnorm(n_points, 0, noise)\n      \n      return(as.data.table(list(x = x, y = y)))\n}\n\n\nset.seed(123)\n\n\nN <- 1e+5L\n\n\nsemicircle1 <- generate_random_semicircle(center_x = 0, center_y = 0.25, radius = 1,\n                                          start_angle = pi, end_angle = 2 * pi, n_points = N)\nsemicircle1[, group := \"Semicircle 1\"]\n\n\nsemicircle2 <- generate_random_semicircle(center_x = 1, center_y = -0.25, radius = 1,\n                                          start_angle = 0, end_angle = pi, n_points = N)\nsemicircle2[, group := \"Semicircle 2\"]\n\n\n\ndf <- rbindlist(list(semicircle1, semicircle2))\n\n\n# visualization\nggplot(df, aes(x = x, y = y, color = group)) +\n  geom_point(size = 2) +\n  coord_fixed(ratio = 1) +\n  theme_minimal() +\n  labs(title = \"Randomized Overlapping Semicircles\", x = NULL, y = NULL) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlab_data <- df[, !c(\"group\"), with = FALSE]\n```\n:::\n\n\n\n\n### R - Naive\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlab_data_r <- lab_data\n\nepsilon <-  .08\nminpts <- 200L #should be an integer for the python env\n\n\n\nstime <- Sys.time()\ndb_result_r <- dbscan(lab_data_r, eps = epsilon, minPts = minpts)\netime <- Sys.time()\n\ndelta_t_r <- etime-stime; delta_t_r\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 9.05127 secs\n```\n\n\n:::\n\n```{.r .cell-code}\n# result\ntable(db_result_r$cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    0     1     2 \n  143 99925 99932 \n```\n\n\n:::\n\n```{.r .cell-code}\nlab_data_r$group <- as.factor(db_result_r$cluster)\n\n# visualization\nggplot(lab_data_r, aes(x = x, y = y, color = group)) +\n    geom_point(size = 2) +\n    coord_fixed(ratio = 1) +\n    theme_minimal() +\n    labs(title = \"Randomized Overlapping Semicircles\", x = NULL, y = NULL) +\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Python - `wangyiqiu/dbscan-python`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlab_data_py <- lab_data\n\npy$lab_data <- as.matrix(lab_data_py)\npy$epsilon <- epsilon\npy$minpts <- minpts\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nfrom dbscan import DBSCAN\nimport time\n\nprint(\"type(X):\", type(lab_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntype(X): <class 'numpy.ndarray'>\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(\"shape(X):\", getattr(lab_data, 'shape', None))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nshape(X): (200000, 2)\n```\n\n\n:::\n\n```{.python .cell-code}\nstart = time.time()\nlabels, core_samples_mask = DBSCAN(lab_data, eps = epsilon, min_samples = minpts)\nend = time.time()\n\n\ndelta_t = end - start\n\nprint(f\"Elapsed time: {delta_t:.4f} seconds\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nElapsed time: 0.0561 seconds\n```\n\n\n:::\n\n```{.python .cell-code}\n\n\n# 결과를 R로 반환\n#r.labels = labels\n#r.core_mask = core_samples_mask\n\n```\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# result\ntable(py$labels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   -1     0     1 \n  143 99925 99932 \n```\n\n\n:::\n\n```{.r .cell-code}\nlab_data_py$group <- as.factor(py$labels+1) # as index number starts from 0\n\n# visualization\nggplot(lab_data_py, aes(x = x, y = y, color = group)) +\n      geom_point(size = 2) +\n      coord_fixed(ratio = 1) +\n      theme_minimal() +\n      labs(title = \"Randomized Overlapping Semicircles\", x = NULL, y = NULL) +\n      theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#speedup\n\n\ncat(delta_t_r[[1]]/py$delta_t,\" times speed-up\\n\",sep = \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n161.4497 times speed-up\n```\n\n\n:::\n:::\n\n\n\n## Some Real World Dataset\n\n\nSource: [NYC Taxi Data](https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonths <- 1\n\nurls <- paste0(\"https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-\",sprintf(\"%02d\", 1:months),\".parquet\")\n\n\nplan(multisession,workers = 2)\n\ntaxi_list <- future_lapply(urls, function(url) as.data.table(read_parquet(url))) |> rbindlist()\n\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           used  (Mb) gc trigger  (Mb)  max used  (Mb)\nNcells  2684215 143.4    4876622 260.5   3829681 204.6\nVcells 55665917 424.7  104465195 797.1 103119473 786.8\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(taxi_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   VendorID tpep_pickup_datetime tpep_dropoff_datetime passenger_count\n      <int>               <POSc>                <POSc>           <int>\n1:        2  2024-01-01 00:57:55   2024-01-01 01:17:43               1\n2:        1  2024-01-01 00:03:00   2024-01-01 00:09:36               1\n3:        1  2024-01-01 00:17:06   2024-01-01 00:35:01               1\n4:        1  2024-01-01 00:36:38   2024-01-01 00:44:56               1\n5:        1  2024-01-01 00:46:51   2024-01-01 00:52:57               1\n6:        1  2024-01-01 00:54:08   2024-01-01 01:26:31               1\n   trip_distance RatecodeID store_and_fwd_flag PULocationID DOLocationID\n           <num>      <int>             <char>        <int>        <int>\n1:          1.72          1                  N          186           79\n2:          1.80          1                  N          140          236\n3:          4.70          1                  N          236           79\n4:          1.40          1                  N           79          211\n5:          0.80          1                  N          211          148\n6:          4.70          1                  N          148          141\n   payment_type fare_amount extra mta_tax tip_amount tolls_amount\n          <int>       <num> <num>   <num>      <num>        <num>\n1:            2        17.7   1.0     0.5       0.00            0\n2:            1        10.0   3.5     0.5       3.75            0\n3:            1        23.3   3.5     0.5       3.00            0\n4:            1        10.0   3.5     0.5       2.00            0\n5:            1         7.9   3.5     0.5       3.20            0\n6:            1        29.6   3.5     0.5       6.90            0\n   improvement_surcharge total_amount congestion_surcharge Airport_fee\n                   <num>        <num>                <num>       <num>\n1:                     1        22.70                  2.5           0\n2:                     1        18.75                  2.5           0\n3:                     1        31.30                  2.5           0\n4:                     1        17.00                  2.5           0\n5:                     1        16.10                  2.5           0\n6:                     1        41.50                  2.5           0\n```\n\n\n:::\n\n```{.r .cell-code}\n# select numeric rows & filtering out NAs\ntaxi_numeric_dt <- taxi_list[\n    trip_distance > 0 & fare_amount > 0 & !is.na(trip_distance) & !is.na(fare_amount),\n    .(trip_distance, fare_amount)\n]\n\nrm(taxi_list)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           used  (Mb) gc trigger  (Mb)  max used  (Mb)\nNcells  2690799 143.8    4876622 260.5   3829681 204.6\nVcells 13999678 106.9   83572156 637.7 103119473 786.8\n```\n\n\n:::\n\n```{.r .cell-code}\ntaxi_numeric_dt_200k <- taxi_numeric_dt[sample(.N, 200000)]\n#taxi_numeric_dt_10m <- taxi_numeric_dt[sample(.N, 10000000)]\n\n\npy$taxi_numeric_dt_200k <- as.matrix(taxi_numeric_dt_200k)\n#py$taxi_numeric_dt_10m <- as.matrix(taxi_numeric_dt_10m)\n```\n:::\n\n\n\n### R - Naive\n\n\n::: {.cell}\n\n```{.r .cell-code}\nepsilon <-  0.3\nminpts <- 10L\n\n\nstime <- Sys.time()\ndb_result_r <- dbscan(taxi_numeric_dt_200k, eps = epsilon, minPts = minpts)\netime <- Sys.time()\n\ndelta_t_r <- etime-stime; delta_t_r\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 11.44536 secs\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(db_result_r$cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     0      1      2      3      4      5      6      7      8      9     10 \n  4389 163774   6336   4349     79     24   1035   6355    206   1185   2048 \n    11     12     13     14     15     16     17     18     19     20     21 \n  1503   1218    270    301    617    893    311    106    145    313    247 \n    22     23     24     25     26     27     28     29     30     31     32 \n   244    161     74     70    224    205    155    155    437    137    449 \n    33     34     35     36     37     38     39     40     41     42     43 \n    39    135     68     76    164     29    167     37     39    118     40 \n    44     45     46     47     48     49     50     51     52     53     54 \n    27     39     18     17     16    142     49     72     44     19     11 \n    55     56     57     58     59     60     61     62     63     64     65 \n    15      7     14     32     14     31     11     10     21     31     12 \n    66     67     68     69     70     71     72     73     74     75     76 \n    11     18     24     20     30     12     11     20     10     33     14 \n    77     78     79     80     81     82     83     84     85     86     87 \n    10     13      9     10     11     16     11     12      9     10      7 \n    88     89     90     91     92     93     94     95     96     97     98 \n    10     10     10      3     10     10      7     10     10     10     10 \n```\n\n\n:::\n:::\n\n\n\n\n### Python - `wangyiqiu/dbscan-python`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npy$taxi_numeric_dt_200k <- as.matrix(taxi_numeric_dt_200k)\npy$epsilon <- epsilon\npy$minpts <- minpts\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nfrom dbscan import DBSCAN\nimport time\n\nprint(\"type(X):\", type(taxi_numeric_dt_200k))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntype(X): <class 'numpy.ndarray'>\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(\"shape(X):\", getattr(taxi_numeric_dt_200k, 'shape', None))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nshape(X): (200000, 2)\n```\n\n\n:::\n\n```{.python .cell-code}\nstart = time.time()\nlabels, core_samples_mask = DBSCAN(taxi_numeric_dt_200k, eps=0.3, min_samples=10)\nend = time.time()\n\n\n\ndelta_t = end - start\n\nprint(f\"Elapsed time: {delta_t:.4f} seconds\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nElapsed time: 0.0379 seconds\n```\n\n\n:::\n:::\n\n\n\n### Results\n\nThe code below shows the results are valid, as it counts how many rows are assigned to each label, sorts the counts in ascending order, and returns the difference between the two label distributions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsort(as.vector(table(as.factor(py$labels)))) - sort(as.vector(table(as.factor(db_result_r$cluster))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  3  0  1  3  1  1  0  0  0  0  0  0  0  0  0  0  0  0  1  1  0  0  0  0  1\n[26]  1  0  0  1  0  0  0  0  0  0  0  0 -1  0 -1  0  0  0  0  0  1  0  0  0  0\n[51]  1  0  0  0  0  0  0  0  0  0  0  0  0 -1 -2  0  0  0  0  0  0  0  0  0  0\n[76] -3  0  0  0  0  0  0  0  0  0 -1  0  0  0 -2  3  0 -2  0  0  0  0  0 -6\n```\n\n\n:::\n:::\n\n\nA slight difference is observed. but it appears to stem from floating-point or grid based operations, hence it is negligible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#speedup\n\n\ncat(delta_t_r[[1]]/py$delta_t,\" times speed-up\\n\",sep = \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n301.7172 times speed-up\n```\n\n\n:::\n:::\n\n\n\nWhat a whopping improvement isn't it?\n\n\n# Take-home message\n\n::: {.callout-tip title=\"DBSCAN is a slow algorithm\"}\n\n- Worst-case time: $\\Theta(n^2 \\cdot d)$ regardless of indexing.\n- Well-behaved low-dimensional data with effective indexing can approach $O(n \\log n \\cdot d)$.\n- As $d$ or $\\varepsilon$ grow, expect degradation toward quadratic behavior.\n- Tuning $\\varepsilon$, choosing appropriate indexes, and reducing $d$ (e.g., via PCA) often matter more than micro-optimizations.\n- If you cannot apply the above strategies, **use a high-performance implementation**.\n\n\n:::\n\n\n\n\n# Environment info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 24.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\ntime zone: UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n[1] reticulate_1.43.0   future.apply_1.20.0 future_1.67.0      \n[4] arrow_21.0.0.1      dbscan_1.2.3        ggplot2_3.5.2      \n[7] data.table_1.17.8  \n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-3       bit_4.6.0          gtable_0.3.6       jsonlite_2.0.0    \n [5] dplyr_1.1.4        compiler_4.5.0     renv_1.1.5         tidyselect_1.2.1  \n [9] Rcpp_1.1.0         parallel_4.5.0     assertthat_0.2.1   png_0.1-8         \n[13] globals_0.18.0     scales_1.4.0       yaml_2.3.10        fastmap_1.2.0     \n[17] lattice_0.22-7     R6_2.6.1           labeling_0.4.3     generics_0.1.4    \n[21] knitr_1.50         htmlwidgets_1.6.4  tibble_3.3.0       pillar_1.11.0     \n[25] RColorBrewer_1.1-3 rlang_1.1.6        xfun_0.52          bit64_4.6.0-1     \n[29] cli_3.6.5          withr_3.0.2        magrittr_2.0.3     digest_0.6.37     \n[33] grid_4.5.0         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.4    \n[37] glue_1.8.0         listenv_0.9.1      farver_2.1.2       codetools_0.2-20  \n[41] parallelly_1.45.1  rmarkdown_2.29     purrr_1.1.0        tools_4.5.0       \n[45] pkgconfig_2.0.3    htmltools_0.5.8.1 \n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (Sys.info()[[1]]==\"Windows\") {\n        \n    # For my Windows Environment\n    system(\"systeminfo\",intern = T)\n    \n    \n    } else{\n    \n    system(\"lscpu; free -h\",intern = T)\n\n    \n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Architecture:                         xn [2] \"CPU op-mode(s):                       32-bit, 64-bit\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n [3] \"Address sizes:                        48 bits physical, 48 bits virtualn [4] \"Byte Order:                           Little Endiann [5] \"CPU(sn [6] \"On-line CPU(s) listn [7] \"Vendor ID:                            Authenticn [8] \"Model name:                           AMD EPYC 7763 64-Core Processorn [9] \"CPU familyn[10] \"Modeln[11] \"Thread(s) per coren[12] \"Core(s) per socketn[13] \"Socket(sn[14] \"Steppingn[15] \"BogoMIPS:                             4890.86\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \n[16] \"Flags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl tsc_reliable nonstop_tsc cpuid extd_apicid aperfmperf tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy svm cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw topoext vmmcall fsgsbase bmi1 avx2 smep bmi2 erms invpcid rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves user_shstk clzero xsaveerptr rdpru arat npt nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload umip vaes vpclmulqdq rdpid fsrm\"\n[17] \"Virtualizationn[18] \"Hypervisor vendor:                    Microsoftn[19] \"Virtualization type:                  fulln[20] \"L1d cache:                            64 KiB (2 instancesn[21] \"L1i cache:                            64 KiB (2 instancesn[22] \"L2 cache:                             1 MiB (2 instancesn[23] \"L3 cache:                             32 MiB (1 instancen[24] \"NUMA node(sn[25] \"NUMA node0 CPU(sn[26] \"Vulnerability Gather data sampling:   Not affectedn[27] \"Vulnerability Itlb multihit:          Not affectedn[28] \"Vulnerability L1tf:                   Not affectedn[29] \"Vulnerability Mds:                    Not affectedn[30] \"Vulnerability Meltdown:               Not affectedn[31] \"Vulnerability Mmio stale data:        Not affectedn[32] \"Vulnerability Reg file data sampling: Not affectedn[33] \"Vulnerability Retbleed:               Not affectedn[34] \"Vulnerability Spec rstack overflow:   Vulnerable: Safe RET, no microcoden[35] \"Vulnerability Spec store bypass:      Vulnerablen[36] \"Vulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitizationn[37] \"Vulnerability Spectre v2:             Mitigation; Retpolines; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affectedn[38] \"Vulnerability Srbds:                  Not affectedn[39] \"Vulnerability Tsx async abort:        Not affectedn[40] \"               total        used        free      shared  buff/cache   availablen[41] \"Mem:            15Gi       2.9Gi       3.5Gi        52Mi       9.2Gi        12Gi\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n[42] \"Swap:          4.0Gi          0B       4.0Gin```\n\n\n:::\n:::\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}